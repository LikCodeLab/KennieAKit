apply plugin: 'com.android.library'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 23
        versionCode 10
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.2.0'

    compile project(':ability:liba_ability_core')
}

//是否提交到仓库
def upload = true
def release = false
def vername = android.defaultConfig.versionName

if (upload) {
    apply plugin: 'maven'

    println('upload model: sdk to maven...')

    group = 'com.want.ability'
    version = release ? vername : vername + '-SNAPSHOT'

    task androidSourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    artifacts {
        archives androidSourcesJar
        //当前aar 文件名
        archives file('liba_ability_viewserver.aar')
    }

    uploadArchives {
        repositories.mavenDeployer {
            repository(url: MAVEN_R_URL) {
                authentication(userName: MAVEN_D_USERNAME, password: MAVEN_D_PASSWORD)
            }
            snapshotRepository(url: MAVEN_S_URL) {
                authentication(userName: MAVEN_D_USERNAME, password: MAVEN_D_PASSWORD)
            }
            pom.artifactId = "viewserver"
        }
    }
}
